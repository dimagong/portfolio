{"version":3,"sources":["assets/chacknoris_4.png","assets/shop.png","assets/movie1.png","assets/PopularMovie.png","assets/firebase.png","assets/Layout.png","assets/session.png","assets/map3D.png","assets/project.data.js","component/card.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","projectData","name","surname","description","image","photo_0","url","id","photo_1","photo_2","photo_3","photo_4","photo_5","photo_6","photo_7","useStyles","makeStyles","theme","card","height","display","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","CartComponent","classes","Fragment","Grid","container","spacing","justify","map","item","key","xs","sm","md","Card","className","CardMedia","title","CardContent","Typography","gutterBottom","variant","component","style","whiteSpace","CardActions","Button","size","color","onClick","document","location","href","Copyright","align","Link","Date","getFullYear","icon","marginRight","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingBottom","footer","App","CssBaseline","AppBar","position","Toolbar","noWrap","Container","maxWidth","paragraph","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.546bd9b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chacknoris_4.c0cb1730.png\";","module.exports = __webpack_public_path__ + \"static/media/shop.5c3756f1.png\";","module.exports = __webpack_public_path__ + \"static/media/movie1.02e3d21a.png\";","module.exports = __webpack_public_path__ + \"static/media/PopularMovie.830cac33.png\";","module.exports = __webpack_public_path__ + \"static/media/firebase.07402ffc.png\";","module.exports = __webpack_public_path__ + \"static/media/Layout.e2446a54.png\";","module.exports = __webpack_public_path__ + \"static/media/session.1b149940.png\";","module.exports = __webpack_public_path__ + \"static/media/map3D.fbffb25e.png\";","import photo_0 from './chacknoris_4.png';\nimport photo_1 from './shop.png';\nimport photo_2 from './movie1.png';\nimport photo_3 from './PopularMovie.png';\nimport photo_4 from './firebase.png';\nimport photo_5 from './Layout.png';\nimport photo_6 from './session.png';\nimport photo_7 from './map3D.png';\n\n\nexport const projectData = [\n    {\n        name: 'Chuck Norris',\n        surname: 'React, Redux, Saga, Material UI, LocalStorage',\n        description: `In this task it was necessary:\n        1. To use Chuck Norris API to get jokes in JSON format\n        2. Ability to get a random joke and joke from categories\n        3.  Any joke can too by to mark as favorite\n        4. Jokes marked as a favorite should appear in the right box or pull-up  section\n        5. Favorite jokes were should stay after reloading pages without used Back-and`,\n        image: photo_0,\n        url: 'https://github.com/dimagong/chuckNorris',\n        id: 0\n    },\n    {\n        name: 'Shop',\n        surname: 'React, Redax, Ant Design, Firebase, Redux-persist, Axios',\n        description: \"Was created a site for the shop. In this project was a realized  cart for the customer, possibly alter the list of items,  also the possibility to log in for a customer and remembering his data. \\n\\n This is the site project (https://dimagong.github.io/market/)\",\n        image: photo_1,\n        url: 'https://github.com/dimagong/market',\n        id: 1\n    },\n    {\n        name: 'Movie',\n        surname: 'React-Native, Redux, Redux Thunk, Fetch',\n        description: 'Was created mobile-app for searching movies. Customers can input whatever name of films and receive the result require from the server.',\n        image: photo_2,\n        url: 'https://github.com/dimagong/MobileRedux',\n        id: 2\n    },\n    {\n        name: 'Best movie',\n        surname: 'React, Fetch, Bootstrap, Classnames',\n        description: 'This project has created as an application for customers to find a list of popular movies, financially successful, and regular films. \\n\\n This is the site project (https://dimagong.github.io/cinema/)',\n        image: photo_3,\n        url: 'https://github.com/dimagong/cinema',\n        id: 3\n    },\n    {\n        name: 'Firebase server',\n        surname: 'Firebase',\n        description: 'Was created a server for send data from Firebase to whatever site and also for store logins and passwords users.',\n        image:  photo_4, \n        url: 'https://github.com/dimagong/firebase-server',\n        id: 4\n    },\n    {\n        name: 'Layout',\n        surname: 'JS, SCSS, WEBPACK',\n        description: 'This is a landing page, where was implement slider and form for customers with help native JS and SCSS. For convenience was used webpack.\\n\\n This is the site project (https://dimagong.github.io/layout/)',\n        image: photo_5,\n        url: 'https://github.com/dimagong/layout',\n        id: 5\n    },\n    {\n        name: 'Pomodoro Clock',\n        surname: 'React, Redux',\n        description: 'Was needed to invent timer with large functional.  Users can set up time, break, and if, after the break, the timer continues work, begin to sound music.  This task was to be performed without hooks, only with help class components.',\n        image: photo_6,\n        url: 'https://codepen.io/dimagong/pen/zYxdmwj?editors=0110',\n        id: 6\n    },\n    {\n        name: 'Choropleth Map',\n        surname: 'JS, D3.js, Fetch',\n        description: \"Necessary to build map USA, using json data from different sources. Need to show the percentage of adults age 25 and older with a bachelor's degree or higher (2010-2014)\",\n        image: photo_7,\n        url: 'https://codepen.io/dimagong/pen/zYGLObZ',\n        id: 7\n    }\n];\n\n","import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {projectData} from '../assets/project.data'\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      cardMedia: {\n        paddingTop: '56.25%', // 16:9\n      },\n      cardContent: {\n        flexGrow: 1,\n      },\n\n}));\n\n\nconst CartComponent = () => {\n\n    const classes = useStyles();\n\n    return(\n        <React.Fragment>\n        <Grid container spacing={4} justify=\"center\">\n            {projectData.map((card) => (\n              <Grid item key={card.id} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image={card.image}\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {card.name}\n                    </Typography>\n                    <Typography gutterBottom variant=\"h7\" component=\"h3\">\n                      {card.surname}\n                    </Typography>\n                    <Typography style={{whiteSpace: 'pre-line'}}>\n                      {card.description}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button size=\"small\" color=\"primary\" onClick={ () => document.location.href = `${card.url}` }  >\n                     View project\n                    </Button>\n                    {/* <Button size=\"small\" color=\"primary\">\n                      Edit\n                    </Button> */}\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n          </React.Fragment>\n    )\n}\n\nexport default CartComponent","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport WorkIcon from '@material-ui/icons/Work';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nimport CartComponent from './component/card.component.jsx'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n      http://dimagong.site/\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\n\n const App = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline  />\n      <AppBar position=\"relative\">\n        <Toolbar style={{backgroundColor: '#9a0036'}}>\n          <WorkIcon className={classes.icon} />\n          {/* <CameraIcon className={classes.icon} /> */}\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            PORTFOLIO  \n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              My some projects\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              In my projects, I prefer to use \n              the next technologies stack: \n              JS, React, Redux, Saga, \n              Material-UI, Ant, Scss.\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"contained\" color=\"secondary\" onClick={ () => document.location.href = \"https://github.com/dimagong\" } >\n                    GitHub\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"secondary\" onClick={ () => document.location.href = \"https://www.linkedin.com/in/dmytrogongalskyy/\" } >\n                    Linkedin\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          <CartComponent />\n        </Container>\n      </main>\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n        With hoping for collaboration! \n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n        dimagong@gmail.com \n        </Typography>\n        <Copyright />\n      </footer>\n    </React.Fragment>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}